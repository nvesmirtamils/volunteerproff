/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../common";
import type {
  VolunteerComment,
  VolunteerCommentInterface,
} from "../../contracts/VolunteerComment";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "recordId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "string",
        name: "text",
        type: "string",
      },
    ],
    name: "Commented",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "recordId",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "text",
        type: "string",
      },
    ],
    name: "addComment",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "recordId",
        type: "uint256",
      },
    ],
    name: "getCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "recordId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "start",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "count",
        type: "uint256",
      },
    ],
    name: "getWindow",
    outputs: [
      {
        internalType: "address[]",
        name: "users",
        type: "address[]",
      },
      {
        internalType: "string[]",
        name: "texts",
        type: "string[]",
      },
      {
        internalType: "uint64[]",
        name: "timestamps",
        type: "uint64[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50610883806100206000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c8063aa7e568314610046578063c23539181461005b578063fcc3a5c51461008e575b600080fd5b61005961005436600461047b565b6100b0565b005b61007b6100693660046104f7565b60009081526020819052604090205490565b6040519081526020015b60405180910390f35b6100a161009c366004610510565b6101dd565b60405161008593929190610582565b6000808481526020019081526020016000206040518060600160405280336001600160a01b0316815260200184848080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201829052509385525050504267ffffffffffffffff1660209283015283546001808201865594825290829020835160039092020180546001600160a01b0319166001600160a01b039092169190911781559082015191929091908201906101709082610706565b50604091820151600291909101805467ffffffffffffffff191667ffffffffffffffff90921691909117905551339084907f7c42a07debc7c62e7a9a8b400458d0240888de5a34a7e25338c082ed7ff828b1906101d090869086906107c6565b60405180910390a3505050565b6000838152602081905260408120606091829182916101fc868861080b565b825490915081111561020c575080545b600087821161021c576000610226565b6102268883610824565b90508067ffffffffffffffff81111561024157610241610665565b60405190808252806020026020018201604052801561026a578160200160208202803683370190505b5095508067ffffffffffffffff81111561028657610286610665565b6040519080825280602002602001820160405280156102b957816020015b60608152602001906001900390816102a45790505b5094508067ffffffffffffffff8111156102d5576102d5610665565b6040519080825280602002602001820160405280156102fe578160200160208202803683370190505b50935060005b8181101561046e57600084610319838c61080b565b8154811061032957610329610837565b60009182526020909120600390910201805489519192506001600160a01b03169089908490811061035c5761035c610837565b60200260200101906001600160a01b031690816001600160a01b03168152505080600101805461038b9061067b565b80601f01602080910402602001604051908101604052809291908181526020018280546103b79061067b565b80156104045780601f106103d957610100808354040283529160200191610404565b820191906000526020600020905b8154815290600101906020018083116103e757829003601f168201915b505050505087838151811061041b5761041b610837565b60209081029190910101526002810154865167ffffffffffffffff9091169087908490811061044c5761044c610837565b67ffffffffffffffff9092166020928302919091019091015250600101610304565b5050505093509350939050565b60008060006040848603121561049057600080fd5b83359250602084013567ffffffffffffffff808211156104af57600080fd5b818601915086601f8301126104c357600080fd5b8135818111156104d257600080fd5b8760208285010111156104e457600080fd5b6020830194508093505050509250925092565b60006020828403121561050957600080fd5b5035919050565b60008060006060848603121561052557600080fd5b505081359360208301359350604090920135919050565b60008151808452602080850194506020840160005b8381101561057757815167ffffffffffffffff1687529582019590820190600101610551565b509495945050505050565b606080825284519082018190526000906020906080840190828801845b828110156105c45781516001600160a01b03168452928401929084019060010161059f565b50505083810382850152855180825282820190600581901b8301840188850160005b8381101561064357601f19808785030186528251805180865260005b8181101561061d578281018b01518782018c01528a01610602565b5060008682018b015296890196601f0190911690930187019250908601906001016105e6565b50508681036040880152610657818961053c565b9a9950505050505050505050565b634e487b7160e01b600052604160045260246000fd5b600181811c9082168061068f57607f821691505b6020821081036106af57634e487b7160e01b600052602260045260246000fd5b50919050565b601f821115610701576000816000526020600020601f850160051c810160208610156106de5750805b601f850160051c820191505b818110156106fd578281556001016106ea565b5050505b505050565b815167ffffffffffffffff81111561072057610720610665565b6107348161072e845461067b565b846106b5565b602080601f83116001811461076957600084156107515750858301515b600019600386901b1c1916600185901b1785556106fd565b600085815260208120601f198616915b8281101561079857888601518255948401946001909101908401610779565b50858210156107b65787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b60208152816020820152818360408301376000818301604090810191909152601f909201601f19160101919050565b634e487b7160e01b600052601160045260246000fd5b8082018082111561081e5761081e6107f5565b92915050565b8181038181111561081e5761081e6107f5565b634e487b7160e01b600052603260045260246000fdfea2646970667358221220386a86c574a91de2a2a6d1194553988a2ad8cf8d077b6ed42e435198056d5c2a64736f6c63430008180033";

type VolunteerCommentConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: VolunteerCommentConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class VolunteerComment__factory extends ContractFactory {
  constructor(...args: VolunteerCommentConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      VolunteerComment & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): VolunteerComment__factory {
    return super.connect(runner) as VolunteerComment__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): VolunteerCommentInterface {
    return new Interface(_abi) as VolunteerCommentInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): VolunteerComment {
    return new Contract(address, _abi, runner) as unknown as VolunteerComment;
  }
}
