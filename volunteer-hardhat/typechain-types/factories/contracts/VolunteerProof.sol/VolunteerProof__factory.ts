/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  VolunteerProof,
  VolunteerProofInterface,
} from "../../../contracts/VolunteerProof.sol/VolunteerProof";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "badgeAddress",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "recordId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "isPublic",
        type: "bool",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "activityHash",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "string",
        name: "ipfsCid",
        type: "string",
      },
    ],
    name: "RecordSubmitted",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "awardBadge",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "badge",
    outputs: [
      {
        internalType: "contract IVolunteerBadge",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "getPublicRecordCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "startId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "count",
        type: "uint256",
      },
    ],
    name: "getPublicRecordWindow",
    outputs: [
      {
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "getRecord",
    outputs: [
      {
        internalType: "bytes32",
        name: "activityHash",
        type: "bytes32",
      },
      {
        internalType: "string",
        name: "ipfsCid",
        type: "string",
      },
      {
        internalType: "euint32",
        name: "encHours",
        type: "bytes32",
      },
      {
        internalType: "euint64",
        name: "date",
        type: "bytes32",
      },
      {
        internalType: "bool",
        name: "isPublic",
        type: "bool",
      },
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        internalType: "uint64",
        name: "createdAt",
        type: "uint64",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "getTotalHours",
    outputs: [
      {
        internalType: "euint32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "getUserRecordIds",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "protocolId",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "publicRecordCount",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "activityHash",
        type: "bytes32",
      },
      {
        internalType: "string",
        name: "ipfsCid",
        type: "string",
      },
      {
        internalType: "externalEuint32",
        name: "extHours",
        type: "bytes32",
      },
      {
        internalType: "externalEuint64",
        name: "extDate",
        type: "bytes32",
      },
      {
        internalType: "bytes",
        name: "inputProof",
        type: "bytes",
      },
      {
        internalType: "bool",
        name: "isPublic",
        type: "bool",
      },
    ],
    name: "submitRecord",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b5060405161144038038061144083398101604081905261002f916101cf565b6101aa6100ce604080516080810182526000808252602082018190529181018290526060810191909152506040805160808101825273687820221192c5b662b25367f70076a37bc79b6c815273848b0066793bcc60346da1f49049357399b8d595602082015273a02cda4ca3a71d7c46997716f4283aa851c2881291810191909152731364cbbf2cdf5032c47d8226a6f6fbd2afcdacac606082015290565b80517f9e7b61f58c47dc699ac88507c4f5bb9f121c03808c5676a8078fe583e464970080546001600160a01b03199081166001600160a01b039384161790915560208301517f9e7b61f58c47dc699ac88507c4f5bb9f121c03808c5676a8078fe583e46497018054831691841691909117905560408301517f9e7b61f58c47dc699ac88507c4f5bb9f121c03808c5676a8078fe583e46497028054831691841691909117905560608301517f9e7b61f58c47dc699ac88507c4f5bb9f121c03808c5676a8078fe583e46497038054909216921691909117905550565b600480546001600160a01b0319166001600160a01b03929092169190911790556101ff565b6000602082840312156101e157600080fd5b81516001600160a01b03811681146101f857600080fd5b9392505050565b6112328061020e6000396000f3fe608060405234801561001057600080fd5b506004361061009e5760003560e01c806391d768de1161006657806391d768de14610155578063a98eb8ee14610180578063c12be92914610193578063da1f12ab146101ca578063e75904d9146101d257600080fd5b806303e9e609146100a35780631298c848146100d25780631adad0ef146100e75780632c071ef41461012257806351ddeefa14610135575b600080fd5b6100b66100b1366004610ce4565b6101e5565b6040516100c99796959493929190610d43565b60405180910390f35b6100e56100e0366004610de2565b6102fd565b005b61010d6100f5366004610e87565b60036020526000908152604090205463ffffffff1681565b60405163ffffffff90911681526020016100c9565b6100e5610130366004610e87565b610646565b610148610143366004610eb7565b61074c565b6040516100c99190610ed9565b600454610168906001600160a01b031681565b6040516001600160a01b0390911681526020016100c9565b61014861018e366004610e87565b610847565b6101bc6101a1366004610e87565b6001600160a01b031660009081526002602052604090205490565b6040519081526020016100c9565b6127116101bc565b6101bc6101e0366004610e87565b6108b3565b600060606000806000806000806000898154811061020557610205610f1d565b600091825260209091206005909102018054600282015460038301546004840154600185018054959650939460ff82169161010081046001600160a01b031691600160a81b90910467ffffffffffffffff1690869061026390610f33565b80601f016020809104026020016040519081016040528092919081815260200182805461028f90610f33565b80156102dc5780601f106102b1576101008083540402835291602001916102dc565b820191906000526020600020905b8154815290600101906020018083116102bf57829003601f168201915b50505050509550975097509750975097509750975050919395979092949650565b600061033f8685858080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525061095892505050565b905060006103838686868080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525061096f92505050565b905060006040518060e001604052808c81526020018b8b8080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920182905250938552505050602080830187905260408301869052871515606084015233608084015267ffffffffffffffff421660a0909301929092528354600181810186559482529082902083516005909202019081559082015191929091908201906104329082610fd3565b50604082015160028201556060820151600382015560808201516004909101805460a084015160c09094015167ffffffffffffffff16600160a81b0267ffffffffffffffff60a81b196001600160a01b0390951661010002610100600160a81b0319941515949094166001600160a81b0319909216919091179290921792909216179055600080546104c6906001906110a9565b33600081815260016020818152604080842080549384018155845281842090920185905592825260029092522054909150610501908461097d565b33600090815260026020526040812091909155805461054291908390811061052b5761052b610f1d565b9060005260206000209060050201600201546109af565b503360009081526002602052604090205461055c906109af565b5061058b6000828154811061057357610573610f1d565b906000526020600020906005020160020154336109bf565b50336000818152600260205260409020546105a5916109bf565b5080336001600160a01b03167f8d0be5f8c2351217481e542a23b16ba44ffd8e1c995cef3cf4b18d199afdbadf868e8e8e6040516105e694939291906110bc565b60405180910390a383156106395733600090815260036020526040812080546001929061061a90849063ffffffff166110fb565b92506101000a81548163ffffffff021916908363ffffffff1602179055505b5050505050505050505050565b6001600160a01b03811660009081526003602052604081205463ffffffff169060018210610672575060015b60058263ffffffff1610610684575060025b600a8263ffffffff1610610696575060035b60148263ffffffff16106106a8575060045b6004546001600160a01b0316158015906106c5575060008160ff16115b1561074757600480546040516312b5179560e11b81526001600160a01b038681169382019390935260ff8416602482015291169063256a2f2a906044016020604051808303816000875af1158015610721573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610745919061111f565b505b505050565b6060600061075a8385611138565b60005490915081111561076c57506000545b600084821161077c576000610786565b61078685836110a9565b90508067ffffffffffffffff8111156107a1576107a1610f6d565b6040519080825280602002602001820160405280156107ca578160200160208202803683370190505b5092506000855b8381101561083b57600081815481106107ec576107ec610f1d565b600091825260209091206004600590920201015460ff1615610833578085836108148161114b565b94508151811061082657610826610f1d565b6020026020010181815250505b6001016107d1565b50835250909392505050565b6001600160a01b0381166000908152600160209081526040918290208054835181840281018401909452808452606093928301828280156108a757602002820191906000526020600020905b815481526020019060010190808311610893575b50505050509050919050565b6001600160a01b0381166000908152600160205260408120548190815b8181101561094f576001600160a01b038516600090815260016020526040812080548390811061090257610902610f1d565b90600052602060002001548154811061091d5761091d610f1d565b600091825260209091206004600590920201015460ff161561094757826109438161114b565b9350505b6001016108d0565b50909392505050565b6000610966838360046109d2565b90505b92915050565b6000610966838360056109d2565b6000826109915761098e6000610ae9565b92505b816109a3576109a06000610ae9565b91505b61096683836000610afc565b60006109bb8230610bb8565b5090565b60006109cb8383610bb8565b5090919050565b7f9e7b61f58c47dc699ac88507c4f5bb9f121c03808c5676a8078fe583e46497015460405163196d0b9b60e01b81526000916000805160206111dd833981519152916001600160a01b039091169063196d0b9b90610a3a908890339089908990600401611186565b6020604051808303816000875af1158015610a59573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a7d919061111f565b8154604051630f8e573b60e21b8152600481018390523360248201529193506001600160a01b031690633e395cec90604401600060405180830381600087803b158015610ac957600080fd5b505af1158015610add573d6000803e3d6000fd5b50505050509392505050565b60006109698263ffffffff166004610c35565b6000808215610b105750600160f81b610b14565b5060005b60006000805160206111dd833981519152600181015460405163022f65e760e31b815260048101899052602481018890526001600160f81b0319851660448201529192506001600160a01b03169063117b2f38906064016020604051808303816000875af1158015610b8a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610bae919061111f565b9695505050505050565b60006000805160206111dd8339815191528054604051635ca4b5b160e11b8152600481018690526001600160a01b03858116602483015292935091169063b9496b6290604401600060405180830381600087803b158015610c1857600080fd5b505af1158015610c2c573d6000803e3d6000fd5b50505050505050565b7f9e7b61f58c47dc699ac88507c4f5bb9f121c03808c5676a8078fe583e464970154604051639cd07acb60e01b81526000916000805160206111dd833981519152916001600160a01b0390911690639cd07acb90610c9990879087906004016111c8565b6020604051808303816000875af1158015610cb8573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610cdc919061111f565b949350505050565b600060208284031215610cf657600080fd5b5035919050565b6000815180845260005b81811015610d2357602081850181015186830182015201610d07565b506000602082860101526020601f19601f83011685010191505092915050565b87815260e060208201526000610d5c60e0830189610cfd565b604083019790975250606081019490945291151560808401526001600160a01b031660a083015267ffffffffffffffff1660c09091015292915050565b60008083601f840112610dab57600080fd5b50813567ffffffffffffffff811115610dc357600080fd5b602083019150836020828501011115610ddb57600080fd5b9250929050565b60008060008060008060008060c0898b031215610dfe57600080fd5b88359750602089013567ffffffffffffffff80821115610e1d57600080fd5b610e298c838d01610d99565b909950975060408b0135965060608b0135955060808b0135915080821115610e5057600080fd5b50610e5d8b828c01610d99565b90945092505060a08901358015158114610e7657600080fd5b809150509295985092959890939650565b600060208284031215610e9957600080fd5b81356001600160a01b0381168114610eb057600080fd5b9392505050565b60008060408385031215610eca57600080fd5b50508035926020909101359150565b6020808252825182820181905260009190848201906040850190845b81811015610f1157835183529284019291840191600101610ef5565b50909695505050505050565b634e487b7160e01b600052603260045260246000fd5b600181811c90821680610f4757607f821691505b602082108103610f6757634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052604160045260246000fd5b601f821115610747576000816000526020600020601f850160051c81016020861015610fac5750805b601f850160051c820191505b81811015610fcb57828155600101610fb8565b505050505050565b815167ffffffffffffffff811115610fed57610fed610f6d565b61100181610ffb8454610f33565b84610f83565b602080601f831160018114611036576000841561101e5750858301515b600019600386901b1c1916600185901b178555610fcb565b600085815260208120601f198616915b8281101561106557888601518255948401946001909101908401611046565b50858210156110835787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b634e487b7160e01b600052601160045260246000fd5b8181038181111561096957610969611093565b841515815283602082015260606040820152816060820152818360808301376000818301608090810191909152601f909201601f191601019392505050565b63ffffffff81811683821601908082111561111857611118611093565b5092915050565b60006020828403121561113157600080fd5b5051919050565b8082018082111561096957610969611093565b60006001820161115d5761115d611093565b5060010190565b6054811061118257634e487b7160e01b600052602160045260246000fd5b9052565b8481526001600160a01b03841660208201526080604082018190526000906111b090830185610cfd565b90506111bf6060830184611164565b95945050505050565b82815260408101610eb0602083018461116456fe9e7b61f58c47dc699ac88507c4f5bb9f121c03808c5676a8078fe583e4649700a264697066735822122040d80cfd5dbc66cdde14bb99799c23c3204505de820159f489b74cc126d48b3764736f6c63430008180033";

type VolunteerProofConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: VolunteerProofConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class VolunteerProof__factory extends ContractFactory {
  constructor(...args: VolunteerProofConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    badgeAddress: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(badgeAddress, overrides || {});
  }
  override deploy(
    badgeAddress: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(badgeAddress, overrides || {}) as Promise<
      VolunteerProof & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): VolunteerProof__factory {
    return super.connect(runner) as VolunteerProof__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): VolunteerProofInterface {
    return new Interface(_abi) as VolunteerProofInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): VolunteerProof {
    return new Contract(address, _abi, runner) as unknown as VolunteerProof;
  }
}
